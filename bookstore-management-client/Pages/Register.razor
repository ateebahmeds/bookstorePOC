@page "/register"
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>Register</h3>

<EditForm Model="@registerModel" OnValidSubmit="@HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-2">
        <label>Email:</label>
        <InputText @bind-Value="registerModel.Email" class="form-control" />
    </div>

    <div class="form-group mb-2">
        <label>Password:</label>
        <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-2">@message</div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-2">@errorMessage</div>
}

@code {
    private RegisterModel registerModel = new();
    private string? message;
    private string? errorMessage;

    private async Task HandleRegister()
    {
        errorMessage = null;
        message = null;
        try
        {
            var result = await AuthService.Register(registerModel.Email, registerModel.Password);
            message = result;
            if (!string.IsNullOrEmpty(result))
            {
                Navigation.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    public class RegisterModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
